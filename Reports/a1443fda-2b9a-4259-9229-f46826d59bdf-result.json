{"name": "test_login_with_invalid_email_valid_password", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <method-wrapper '__contains__' of str object at 0x000001926B04D780>('Warning: No match for E-Mail Address and/or Password.')\n +    where <method-wrapper '__contains__' of str object at 0x000001926B04D780> = \"New Customer\\nRegister Account\\nBy creating an account you will be able to shop faster, be up to date on an order's s...ddress Book\\nWish List\\nOrder History\\nDownloads\\nRecurring payments\\nReward Points\\nReturns\\nTransactions\\nNewsletter\".__contains__\n +      where \"New Customer\\nRegister Account\\nBy creating an account you will be able to shop faster, be up to date on an order's s...ddress Book\\nWish List\\nOrder History\\nDownloads\\nRecurring payments\\nReward Points\\nReturns\\nTransactions\\nNewsletter\" = get_login_page_error_message()\n +        where get_login_page_error_message = <pages.LoginPage.LoginPage object at 0x000001926C2101F0>.get_login_page_error_message", "trace": "self = <tests.test_Login.Test_Login object at 0x000001926C0FE750>\n\n    def test_login_with_invalid_email_valid_password(self):\n    \n        homePage = HomePage(self.driver)\n        homePage.click_on_my_account_drop_menu()\n        loginPage = homePage.click_on_login_link_text()\n        loginPage.enter_credentials_for_login(self.generate_email_time_stamp(),'12345')\n        loginPage.click_on_login_button()\n        expected_warning_message=\"Warning: No match for E-Mail Address and/or Password.\"\n>       assert loginPage.get_login_page_error_message().__contains__(expected_warning_message)\nE       assert False\nE        +  where False = <method-wrapper '__contains__' of str object at 0x000001926B04D780>('Warning: No match for E-Mail Address and/or Password.')\nE        +    where <method-wrapper '__contains__' of str object at 0x000001926B04D780> = \"New Customer\\nRegister Account\\nBy creating an account you will be able to shop faster, be up to date on an order's s...ddress Book\\nWish List\\nOrder History\\nDownloads\\nRecurring payments\\nReward Points\\nReturns\\nTransactions\\nNewsletter\".__contains__\nE        +      where \"New Customer\\nRegister Account\\nBy creating an account you will be able to shop faster, be up to date on an order's s...ddress Book\\nWish List\\nOrder History\\nDownloads\\nRecurring payments\\nReward Points\\nReturns\\nTransactions\\nNewsletter\" = get_login_page_error_message()\nE        +        where get_login_page_error_message = <pages.LoginPage.LoginPage object at 0x000001926C2101F0>.get_login_page_error_message\n\ntests\\test_Login.py:34: AssertionError"}, "attachments": [{"name": "log", "source": "fe68f858-caf2-479f-9f7c-d02ceb7db2a0-attachment.txt", "type": "text/plain"}], "start": 1754023270397, "stop": 1754023271255, "uuid": "2f190e9b-829a-43b1-8773-6a16917d3339", "historyId": "aaa4ae9e012294ad239931177c8fb76d", "testCaseId": "aaa4ae9e012294ad239931177c8fb76d", "fullName": "tests.test_Login.Test_Login#test_login_with_invalid_email_valid_password", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "AbinashPC"}, {"name": "thread", "value": "11828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Login"}], "titlePath": ["tests", "test_Login.py", "Test_Login"]}