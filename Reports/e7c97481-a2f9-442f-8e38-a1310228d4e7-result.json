{"name": "test_login_with_valid_credentials[test_newSat_Feb_01_12_03_11_IST_2025@gmail.com -12345]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Edit your account information\"}\n  (Session info: MicrosoftEdge=138.0.3351.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6dab881f5+23461]\n\t(No symbol) [0x0x7ff6daadc2e0]\n\tGetHandleVerifier [0x0x7ff6dae00128+2611928]\n\t(No symbol) [0x0x7ff6da8f91a8]\n\t(No symbol) [0x0x7ff6da8f946b]\n\t(No symbol) [0x0x7ff6da939a67]\n\t(No symbol) [0x0x7ff6da91a6ff]\n\t(No symbol) [0x0x7ff6da8ef58d]\n\t(No symbol) [0x0x7ff6da93754f]\n\t(No symbol) [0x0x7ff6da91a423]\n\t(No symbol) [0x0x7ff6da8eea86]\n\t(No symbol) [0x0x7ff6da8edd11]\n\t(No symbol) [0x0x7ff6da8ee8b3]\n\t(No symbol) [0x0x7ff6da9edd3d]\n\t(No symbol) [0x0x7ff6da9fb0c8]\n\tGetHandleVerifier [0x0x7ff6dac6803b+940523]\n\tGetHandleVerifier [0x0x7ff6dac70d91+976705]\n\t(No symbol) [0x0x7ff6daae9ed1]\n\t(No symbol) [0x0x7ff6daae28b4]\n\t(No symbol) [0x0x7ff6daae2a03]\n\t(No symbol) [0x0x7ff6daad44a6]\n\tBaseThreadInitThunk [0x0x7ffe5651e8d7+23]\n\tRtlUserThreadStart [0x0x7ffe5707c34c+44]", "trace": "self = <tests.test_Login.Test_Login object at 0x000001F19BA8BA80>\nemail = 'test_newSat_Feb_01_12_03_11_IST_2025@gmail.com ', password = 12345\n\n    @pytest.mark.parametrize('email,password',ExcelReader.get_data_from_excel('ExcelFiles/DataDriven.xlsx','TEST'))\n    def test_login_with_valid_credentials(self,email,password):\n    \n        homePage=HomePage(self.driver)\n        homePage.click_on_my_account_drop_menu()\n        loginPage=homePage.click_on_login_link_text()\n        loginPage.enter_credentials_for_login(email,password)\n        loginPage.click_on_login_button()\n>       assert loginPage.display_edit_account_link()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_Login.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\LoginPage.py:25: in display_edit_account_link\n    return self.driver.find_element(By.LINK_TEXT,self.edit_account_LINK_TEXT).is_displayed()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F19BBF8E90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...[0x0x7ff6daad44a6]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe5651e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe5707c34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Edit your account information\"}\nE         (Session info: MicrosoftEdge=138.0.3351.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6dab881f5+23461]\nE       \t(No symbol) [0x0x7ff6daadc2e0]\nE       \tGetHandleVerifier [0x0x7ff6dae00128+2611928]\nE       \t(No symbol) [0x0x7ff6da8f91a8]\nE       \t(No symbol) [0x0x7ff6da8f946b]\nE       \t(No symbol) [0x0x7ff6da939a67]\nE       \t(No symbol) [0x0x7ff6da91a6ff]\nE       \t(No symbol) [0x0x7ff6da8ef58d]\nE       \t(No symbol) [0x0x7ff6da93754f]\nE       \t(No symbol) [0x0x7ff6da91a423]\nE       \t(No symbol) [0x0x7ff6da8eea86]\nE       \t(No symbol) [0x0x7ff6da8edd11]\nE       \t(No symbol) [0x0x7ff6da8ee8b3]\nE       \t(No symbol) [0x0x7ff6da9edd3d]\nE       \t(No symbol) [0x0x7ff6da9fb0c8]\nE       \tGetHandleVerifier [0x0x7ff6dac6803b+940523]\nE       \tGetHandleVerifier [0x0x7ff6dac70d91+976705]\nE       \t(No symbol) [0x0x7ff6daae9ed1]\nE       \t(No symbol) [0x0x7ff6daae28b4]\nE       \t(No symbol) [0x0x7ff6daae2a03]\nE       \t(No symbol) [0x0x7ff6daad44a6]\nE       \tBaseThreadInitThunk [0x0x7ffe5651e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffe5707c34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "log", "source": "96264494-6676-45a7-83d8-d9c4c08da800-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "email", "value": "'test_newSat_Feb_01_12_03_11_IST_2025@gmail.com '"}, {"name": "password", "value": "12345"}], "start": 1754024414436, "stop": 1754024415878, "uuid": "2abb5df6-775b-4d42-b0c7-53a237881718", "historyId": "8aa974ed5d4e92d605d84199dd012bea", "testCaseId": "2948a891b8607e76114b10dce132c4db", "fullName": "tests.test_Login.Test_Login#test_login_with_valid_credentials", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "AbinashPC"}, {"name": "thread", "value": "24524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Login"}], "titlePath": ["tests", "test_Login.py", "Test_Login"]}